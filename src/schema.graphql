type Query {

}


type Mutation {

}


type Chord {
    id: ID!
    rootNote: Note!
    chordSymbol: ChordSymbol!
    intervals: [Interval!]!
    fingerings: [[Fretting!]!]!
    


}


type Fretting {
    fret: Fret!
    string: String!
    note: Note!
}

type Interval {
    1
    2
    3
    4
    5
    6
    7
    8
}


enum String {
    1
    2
    3
    4
    5
    6
}

enum Fret {
    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    22
    23
    24
}


enum Note {
    A
    A#/Bb
    B
    C
    C#/Db
    D
    D#/Eb
    E 
    F
    F#/Gb
    G
    G#/Ab
}


enum ChordSymbol {
    maj
    maj6
    maj7
    maj9
    min 
    min6 
    min7
    min9
    dom7
    sus2
    sus4
    dim


}
